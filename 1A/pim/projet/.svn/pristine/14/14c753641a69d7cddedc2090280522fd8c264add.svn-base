--Specification du module registre. Il utilise un tableau de listes du module liste_chainee pour y insérer des données de type T_Donnée.
--Ce module est réalisé avec la méthode du hachage.

with liste_chainee; 
with Calendar; use Calendar;
with Ada.Text_IO; use Ada.Text_IO;

generic
    Capacite: Integer;

package Registre is
    
    type T_Sexe is (Homme, Femme);
    
    type T_Donnee is
        record
            Id : Integer;
            Prenom: String(1..30);
            Nom: String(1..30);
            Date_Naissance: Time;
            Sexe: T_Sexe;
        end record;

    
    package Liste_Donnee is 
            new liste_chainee (T_Element => T_Donnee);
    use Liste_Donnee;
    
    type T_Registre is limited private; --Type registre.
    
    --Initialiser un registre.
    procedure Initialiser2 (Registre : out T_Registre) with
            Post => Est_Vide2(Registre);
    
    --Savoir si un registre ne contient que des listes vides.
    function Est_Vide2 (Registre : in T_Registre) return Boolean;
    
    -- Savoir si une donnée est présente dans un registre.
    function Est_Present2 (Registre : in T_Registre; Donnee : in T_Donnee) return boolean;
    
    --Connaitre les données de toutes les personnes de même nom, prenom.
    function Connaitre_Donnees2 (Registre : in T_Registre; Nom : in String; Prenom : in String) return T_Liste;
    
    --Ajouter une donnée dans un registre en fonction du modulo capacite.
    procedure Ajouter2 (Registre : in out T_Registre; Donnee : in T_Donnee) with
            pre => not(Est_Present2 (Registre, Donnee)),
            post => Est_Present2 (Registre, Donnee);
    
    -- Connaitre la donnée a partir d'un id.
    function La_Donnee2 (Registre : in T_Registre; id : in Integer) return T_Donnee;
    
    -- Modifier un element dans le registrer.
    procedure Modifier2 (Registre : in out T_Registre; Donnee : in T_Donnee) with 
            post => Est_Present2(Registre, Donnee);
    
    -- Connaitre la taille d'un registre.
    function Taille2 (Registre : in T_Registre) return Integer;
    
    -- Supprimer une donnée dans un registre.
    procedure Supprimer2(Registre : in out T_Registre; Donnee : in T_Donnee) with 
            pre => Est_Present2 (Registre, Donnee),
            post => not(Est_Present2 (Registre, Donnee));
    
            
    --Detruire un registre (toutes les listes sont de tailles vides).
    procedure Detruire2 (Registre : in out T_Registre) with
            post => Est_Vide2(Registre);
 
private
    
    type T_Registre is array (1..Capacite) of T_Liste;
    
end Registre;
