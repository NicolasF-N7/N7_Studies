package allumettes;

public class Arbitre {
	private Joueur j1;
	private Joueur j2;
	private boolean confiant;

	/** Créer un arbitre à partir des 2 joueur qu'il devra arbitrer
	 * 
	 */
	public Arbitre(Joueur j1, Joueur j2, boolean confiant) {
		this.j1 = j1;
		this.j2 = j2;
		this.confiant = confiant;
	}
	
	/**
	 * Faire joueur le joueur jusqu'à ce que la saisie soit cohérente avec le nb d'allumettes restant en jeu et les regles du jeu
	 */
	public void jouer(Joueur joueur, Jeu jeu) throws OperationInterditeException {
		try {
			//Demande de la prise du joueur selon si arbitre confiant
			int choixJoueur;
			if(this.confiant) {
				choixJoueur = joueur.getPrise((Plateau) jeu);
			}
			else {
				choixJoueur = joueur.getPrise(new PlateauProcuration((Plateau) jeu)); //Le joueur ne pourra pas appeler jeu.retirer()
				//choixJoueur = joueur.getPrise(new PlateauProcuration((Plateau) jeu));
			}
			
			System.out.println(joueur.getNom() + " prend " + choixJoueur + (choixJoueur == 1 ? " allumette."
					: " allumettes."));
			jeu.retirer(choixJoueur);
			
		} catch (CoupInvalideException e) {
			System.out.println(e.getMessage());
			
			//Mauvaise saisie du joueur: on redemande
			System.out.println("Recommencez !");
			jouer(joueur, jeu);
		}
	}
	
	public void arbitrer(Jeu jeu) {
		boolean tourJoueurJ1 = true; // Indique que c'est au tour de J1 de jouer
		
		//Boucle principale du jeu
		try {
			while (jeu.getNombreAllumettes() > 0) {
				System.out.println();
				System.out.println("Nombre d'allumettes restantes : " + jeu.getNombreAllumettes());
				System.out.println("Au tour de " + (tourJoueurJ1 ? j1.getNom() : j2.getNom()) + ".");
			
				//Faire jouer le bon  joueur
				if(tourJoueurJ1) {
					this.jouer(j1, jeu);
				}
				else {
					this.jouer(j2, jeu);
				}
			
				tourJoueurJ1 = !tourJoueurJ1; // on fait jouer l'autre joueur au tour d'après
			}
		}
		catch (OperationInterditeException e) {
			System.out.println("Le tricheur a triché ! Fin de la partie.");
			tourJoueurJ1 = !tourJoueurJ1; // L'autre joueur que le tricheur a gagné
		}
		
		System.out.println((tourJoueurJ1 ? j1.getNom() : j2.getNom()) + " a gagné !");
		System.out.println((!tourJoueurJ1 ? j1.getNom() : j2.getNom()) + " a perdu !");
	}

}
